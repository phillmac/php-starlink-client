<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/device.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.SpeedtestStatus</code>
 */
class SpeedtestStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bool running = 1 [json_name = "running"];</code>
     */
    protected $running = null;

    /**
     * Generated from protobuf field <code>optional uint32 id = 2 [json_name = "id"];</code>
     */
    protected $id = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestStatus.Direction up = 1000 [json_name = "up"];</code>
     */
    protected $up = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestStatus.Direction down = 1001 [json_name = "down"];</code>
     */
    protected $down = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type bool $running
     * @type int $id
     * @type \SpaceX\API\Device\SpeedtestStatus\Direction $up
     * @type \SpaceX\API\Device\SpeedtestStatus\Direction $down
     *                                                    }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bool running = 1 [json_name = "running"];</code>
     *
     * @return bool
     */
    public function getRunning()
    {
        return isset($this->running) ? $this->running : false;
    }

    public function hasRunning()
    {
        return isset($this->running);
    }

    public function clearRunning()
    {
        unset($this->running);
    }

    /**
     * Generated from protobuf field <code>optional bool running = 1 [json_name = "running"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setRunning($var)
    {
        GPBUtil::checkBool($var);
        $this->running = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 id = 2 [json_name = "id"];</code>
     *
     * @return int
     */
    public function getId()
    {
        return isset($this->id) ? $this->id : 0;
    }

    public function hasId()
    {
        return isset($this->id);
    }

    public function clearId()
    {
        unset($this->id);
    }

    /**
     * Generated from protobuf field <code>optional uint32 id = 2 [json_name = "id"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestStatus.Direction up = 1000 [json_name = "up"];</code>
     *
     * @return \SpaceX\API\Device\SpeedtestStatus\Direction|null
     */
    public function getUp()
    {
        return $this->up;
    }

    public function hasUp()
    {
        return isset($this->up);
    }

    public function clearUp()
    {
        unset($this->up);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestStatus.Direction up = 1000 [json_name = "up"];</code>
     *
     * @param  \SpaceX\API\Device\SpeedtestStatus\Direction  $var
     * @return $this
     */
    public function setUp($var)
    {
        GPBUtil::checkMessage($var, \SpaceX\API\Device\SpeedtestStatus\Direction::class);
        $this->up = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestStatus.Direction down = 1001 [json_name = "down"];</code>
     *
     * @return \SpaceX\API\Device\SpeedtestStatus\Direction|null
     */
    public function getDown()
    {
        return $this->down;
    }

    public function hasDown()
    {
        return isset($this->down);
    }

    public function clearDown()
    {
        unset($this->down);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestStatus.Direction down = 1001 [json_name = "down"];</code>
     *
     * @param  \SpaceX\API\Device\SpeedtestStatus\Direction  $var
     * @return $this
     */
    public function setDown($var)
    {
        GPBUtil::checkMessage($var, \SpaceX\API\Device\SpeedtestStatus\Direction::class);
        $this->down = $var;

        return $this;
    }
}
