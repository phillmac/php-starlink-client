<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/wifi_util.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.PoeStats</code>
 */
class PoeStats extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.PoeState poe_state = 1 [json_name = "poeState"];</code>
     */
    protected $poe_state = null;

    /**
     * Generated from protobuf field <code>optional float poe_power = 2 [json_name = "poePower"];</code>
     */
    protected $poe_power = null;

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_fast_overcurrent = 3 [json_name = "poeFaultsFastOvercurrent"];</code>
     */
    protected $poe_faults_fast_overcurrent = null;

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_slow_overcurrent = 4 [json_name = "poeFaultsSlowOvercurrent"];</code>
     */
    protected $poe_faults_slow_overcurrent = null;

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_overvoltage = 5 [json_name = "poeFaultsOvervoltage"];</code>
     */
    protected $poe_faults_overvoltage = null;

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_undervoltage = 6 [json_name = "poeFaultsUndervoltage"];</code>
     */
    protected $poe_faults_undervoltage = null;

    /**
     * Generated from protobuf field <code>optional float vsns_vin = 7 [json_name = "vsnsVin"];</code>
     */
    protected $vsns_vin = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type int $poe_state
     * @type float $poe_power
     * @type int $poe_faults_fast_overcurrent
     * @type int $poe_faults_slow_overcurrent
     * @type int $poe_faults_overvoltage
     * @type int $poe_faults_undervoltage
     * @type float $vsns_vin
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\WifiUtil::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.PoeState poe_state = 1 [json_name = "poeState"];</code>
     *
     * @return int
     */
    public function getPoeState()
    {
        return isset($this->poe_state) ? $this->poe_state : 0;
    }

    public function hasPoeState()
    {
        return isset($this->poe_state);
    }

    public function clearPoeState()
    {
        unset($this->poe_state);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.PoeState poe_state = 1 [json_name = "poeState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPoeState($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\PoeState::class);
        $this->poe_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float poe_power = 2 [json_name = "poePower"];</code>
     *
     * @return float
     */
    public function getPoePower()
    {
        return isset($this->poe_power) ? $this->poe_power : 0.0;
    }

    public function hasPoePower()
    {
        return isset($this->poe_power);
    }

    public function clearPoePower()
    {
        unset($this->poe_power);
    }

    /**
     * Generated from protobuf field <code>optional float poe_power = 2 [json_name = "poePower"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setPoePower($var)
    {
        GPBUtil::checkFloat($var);
        $this->poe_power = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_fast_overcurrent = 3 [json_name = "poeFaultsFastOvercurrent"];</code>
     *
     * @return int
     */
    public function getPoeFaultsFastOvercurrent()
    {
        return isset($this->poe_faults_fast_overcurrent) ? $this->poe_faults_fast_overcurrent : 0;
    }

    public function hasPoeFaultsFastOvercurrent()
    {
        return isset($this->poe_faults_fast_overcurrent);
    }

    public function clearPoeFaultsFastOvercurrent()
    {
        unset($this->poe_faults_fast_overcurrent);
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_fast_overcurrent = 3 [json_name = "poeFaultsFastOvercurrent"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPoeFaultsFastOvercurrent($var)
    {
        GPBUtil::checkUint32($var);
        $this->poe_faults_fast_overcurrent = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_slow_overcurrent = 4 [json_name = "poeFaultsSlowOvercurrent"];</code>
     *
     * @return int
     */
    public function getPoeFaultsSlowOvercurrent()
    {
        return isset($this->poe_faults_slow_overcurrent) ? $this->poe_faults_slow_overcurrent : 0;
    }

    public function hasPoeFaultsSlowOvercurrent()
    {
        return isset($this->poe_faults_slow_overcurrent);
    }

    public function clearPoeFaultsSlowOvercurrent()
    {
        unset($this->poe_faults_slow_overcurrent);
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_slow_overcurrent = 4 [json_name = "poeFaultsSlowOvercurrent"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPoeFaultsSlowOvercurrent($var)
    {
        GPBUtil::checkUint32($var);
        $this->poe_faults_slow_overcurrent = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_overvoltage = 5 [json_name = "poeFaultsOvervoltage"];</code>
     *
     * @return int
     */
    public function getPoeFaultsOvervoltage()
    {
        return isset($this->poe_faults_overvoltage) ? $this->poe_faults_overvoltage : 0;
    }

    public function hasPoeFaultsOvervoltage()
    {
        return isset($this->poe_faults_overvoltage);
    }

    public function clearPoeFaultsOvervoltage()
    {
        unset($this->poe_faults_overvoltage);
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_overvoltage = 5 [json_name = "poeFaultsOvervoltage"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPoeFaultsOvervoltage($var)
    {
        GPBUtil::checkUint32($var);
        $this->poe_faults_overvoltage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_undervoltage = 6 [json_name = "poeFaultsUndervoltage"];</code>
     *
     * @return int
     */
    public function getPoeFaultsUndervoltage()
    {
        return isset($this->poe_faults_undervoltage) ? $this->poe_faults_undervoltage : 0;
    }

    public function hasPoeFaultsUndervoltage()
    {
        return isset($this->poe_faults_undervoltage);
    }

    public function clearPoeFaultsUndervoltage()
    {
        unset($this->poe_faults_undervoltage);
    }

    /**
     * Generated from protobuf field <code>optional uint32 poe_faults_undervoltage = 6 [json_name = "poeFaultsUndervoltage"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPoeFaultsUndervoltage($var)
    {
        GPBUtil::checkUint32($var);
        $this->poe_faults_undervoltage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float vsns_vin = 7 [json_name = "vsnsVin"];</code>
     *
     * @return float
     */
    public function getVsnsVin()
    {
        return isset($this->vsns_vin) ? $this->vsns_vin : 0.0;
    }

    public function hasVsnsVin()
    {
        return isset($this->vsns_vin);
    }

    public function clearVsnsVin()
    {
        unset($this->vsns_vin);
    }

    /**
     * Generated from protobuf field <code>optional float vsns_vin = 7 [json_name = "vsnsVin"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setVsnsVin($var)
    {
        GPBUtil::checkFloat($var);
        $this->vsns_vin = $var;

        return $this;
    }
}
