<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/wifi.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.WifiSiteSurveyResult</code>
 */
class WifiSiteSurveyResult extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional float rssi = 1 [json_name = "rssi"];</code>
     */
    protected $rssi = null;

    /**
     * Generated from protobuf field <code>optional uint32 channel = 2 [json_name = "channel"];</code>
     */
    protected $channel = null;

    /**
     * Generated from protobuf field <code>optional string ssid = 3 [json_name = "ssid"];</code>
     */
    protected $ssid = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiSecurity security = 4 [json_name = "security"];</code>
     */
    protected $security = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiMode wireless_mode = 5 [json_name = "wirelessMode"];</code>
     */
    protected $wireless_mode = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.IfaceType iface = 6 [json_name = "iface"];</code>
     */
    protected $iface = null;

    /**
     * Generated from protobuf field <code>optional string mac_address = 7 [json_name = "macAddress"];</code>
     */
    protected $mac_address = null;

    /**
     * Generated from protobuf field <code>optional float est_rx_rate = 8 [json_name = "estRxRate"];</code>
     */
    protected $est_rx_rate = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type float $rssi
     * @type int $channel
     * @type string $ssid
     * @type int $security
     * @type int $wireless_mode
     * @type int $iface
     * @type string $mac_address
     * @type float $est_rx_rate
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Wifi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional float rssi = 1 [json_name = "rssi"];</code>
     *
     * @return float
     */
    public function getRssi()
    {
        return isset($this->rssi) ? $this->rssi : 0.0;
    }

    public function hasRssi()
    {
        return isset($this->rssi);
    }

    public function clearRssi()
    {
        unset($this->rssi);
    }

    /**
     * Generated from protobuf field <code>optional float rssi = 1 [json_name = "rssi"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setRssi($var)
    {
        GPBUtil::checkFloat($var);
        $this->rssi = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 channel = 2 [json_name = "channel"];</code>
     *
     * @return int
     */
    public function getChannel()
    {
        return isset($this->channel) ? $this->channel : 0;
    }

    public function hasChannel()
    {
        return isset($this->channel);
    }

    public function clearChannel()
    {
        unset($this->channel);
    }

    /**
     * Generated from protobuf field <code>optional uint32 channel = 2 [json_name = "channel"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setChannel($var)
    {
        GPBUtil::checkUint32($var);
        $this->channel = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string ssid = 3 [json_name = "ssid"];</code>
     *
     * @return string
     */
    public function getSsid()
    {
        return isset($this->ssid) ? $this->ssid : '';
    }

    public function hasSsid()
    {
        return isset($this->ssid);
    }

    public function clearSsid()
    {
        unset($this->ssid);
    }

    /**
     * Generated from protobuf field <code>optional string ssid = 3 [json_name = "ssid"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setSsid($var)
    {
        GPBUtil::checkString($var, true);
        $this->ssid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiSecurity security = 4 [json_name = "security"];</code>
     *
     * @return int
     */
    public function getSecurity()
    {
        return isset($this->security) ? $this->security : 0;
    }

    public function hasSecurity()
    {
        return isset($this->security);
    }

    public function clearSecurity()
    {
        unset($this->security);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiSecurity security = 4 [json_name = "security"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setSecurity($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\WifiSecurity::class);
        $this->security = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiMode wireless_mode = 5 [json_name = "wirelessMode"];</code>
     *
     * @return int
     */
    public function getWirelessMode()
    {
        return isset($this->wireless_mode) ? $this->wireless_mode : 0;
    }

    public function hasWirelessMode()
    {
        return isset($this->wireless_mode);
    }

    public function clearWirelessMode()
    {
        unset($this->wireless_mode);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiMode wireless_mode = 5 [json_name = "wirelessMode"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setWirelessMode($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\WifiMode::class);
        $this->wireless_mode = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.IfaceType iface = 6 [json_name = "iface"];</code>
     *
     * @return int
     */
    public function getIface()
    {
        return isset($this->iface) ? $this->iface : 0;
    }

    public function hasIface()
    {
        return isset($this->iface);
    }

    public function clearIface()
    {
        unset($this->iface);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.IfaceType iface = 6 [json_name = "iface"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setIface($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\IfaceType::class);
        $this->iface = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string mac_address = 7 [json_name = "macAddress"];</code>
     *
     * @return string
     */
    public function getMacAddress()
    {
        return isset($this->mac_address) ? $this->mac_address : '';
    }

    public function hasMacAddress()
    {
        return isset($this->mac_address);
    }

    public function clearMacAddress()
    {
        unset($this->mac_address);
    }

    /**
     * Generated from protobuf field <code>optional string mac_address = 7 [json_name = "macAddress"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setMacAddress($var)
    {
        GPBUtil::checkString($var, true);
        $this->mac_address = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float est_rx_rate = 8 [json_name = "estRxRate"];</code>
     *
     * @return float
     */
    public function getEstRxRate()
    {
        return isset($this->est_rx_rate) ? $this->est_rx_rate : 0.0;
    }

    public function hasEstRxRate()
    {
        return isset($this->est_rx_rate);
    }

    public function clearEstRxRate()
    {
        unset($this->est_rx_rate);
    }

    /**
     * Generated from protobuf field <code>optional float est_rx_rate = 8 [json_name = "estRxRate"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setEstRxRate($var)
    {
        GPBUtil::checkFloat($var);
        $this->est_rx_rate = $var;

        return $this;
    }
}
