<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/common.proto

namespace SpaceX\API\Device\WifiNetworkInterface;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts</code>
 */
class InvalidPacketCounts extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_nwid = 1 [json_name = "rxInvalidNwid"];</code>
     */
    protected $rx_invalid_nwid = null;

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_crypt = 2 [json_name = "rxInvalidCrypt"];</code>
     */
    protected $rx_invalid_crypt = null;

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_frag = 3 [json_name = "rxInvalidFrag"];</code>
     */
    protected $rx_invalid_frag = null;

    /**
     * Generated from protobuf field <code>optional uint32 tx_excessive_retries = 4 [json_name = "txExcessiveRetries"];</code>
     */
    protected $tx_excessive_retries = null;

    /**
     * Generated from protobuf field <code>optional uint32 invalid_misc = 5 [json_name = "invalidMisc"];</code>
     */
    protected $invalid_misc = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type int $rx_invalid_nwid
     * @type int $rx_invalid_crypt
     * @type int $rx_invalid_frag
     * @type int $tx_excessive_retries
     * @type int $invalid_misc
     *           }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_nwid = 1 [json_name = "rxInvalidNwid"];</code>
     *
     * @return int
     */
    public function getRxInvalidNwid()
    {
        return isset($this->rx_invalid_nwid) ? $this->rx_invalid_nwid : 0;
    }

    public function hasRxInvalidNwid()
    {
        return isset($this->rx_invalid_nwid);
    }

    public function clearRxInvalidNwid()
    {
        unset($this->rx_invalid_nwid);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_nwid = 1 [json_name = "rxInvalidNwid"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxInvalidNwid($var)
    {
        GPBUtil::checkUint32($var);
        $this->rx_invalid_nwid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_crypt = 2 [json_name = "rxInvalidCrypt"];</code>
     *
     * @return int
     */
    public function getRxInvalidCrypt()
    {
        return isset($this->rx_invalid_crypt) ? $this->rx_invalid_crypt : 0;
    }

    public function hasRxInvalidCrypt()
    {
        return isset($this->rx_invalid_crypt);
    }

    public function clearRxInvalidCrypt()
    {
        unset($this->rx_invalid_crypt);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_crypt = 2 [json_name = "rxInvalidCrypt"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxInvalidCrypt($var)
    {
        GPBUtil::checkUint32($var);
        $this->rx_invalid_crypt = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_frag = 3 [json_name = "rxInvalidFrag"];</code>
     *
     * @return int
     */
    public function getRxInvalidFrag()
    {
        return isset($this->rx_invalid_frag) ? $this->rx_invalid_frag : 0;
    }

    public function hasRxInvalidFrag()
    {
        return isset($this->rx_invalid_frag);
    }

    public function clearRxInvalidFrag()
    {
        unset($this->rx_invalid_frag);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_invalid_frag = 3 [json_name = "rxInvalidFrag"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxInvalidFrag($var)
    {
        GPBUtil::checkUint32($var);
        $this->rx_invalid_frag = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_excessive_retries = 4 [json_name = "txExcessiveRetries"];</code>
     *
     * @return int
     */
    public function getTxExcessiveRetries()
    {
        return isset($this->tx_excessive_retries) ? $this->tx_excessive_retries : 0;
    }

    public function hasTxExcessiveRetries()
    {
        return isset($this->tx_excessive_retries);
    }

    public function clearTxExcessiveRetries()
    {
        unset($this->tx_excessive_retries);
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_excessive_retries = 4 [json_name = "txExcessiveRetries"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTxExcessiveRetries($var)
    {
        GPBUtil::checkUint32($var);
        $this->tx_excessive_retries = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 invalid_misc = 5 [json_name = "invalidMisc"];</code>
     *
     * @return int
     */
    public function getInvalidMisc()
    {
        return isset($this->invalid_misc) ? $this->invalid_misc : 0;
    }

    public function hasInvalidMisc()
    {
        return isset($this->invalid_misc);
    }

    public function clearInvalidMisc()
    {
        unset($this->invalid_misc);
    }

    /**
     * Generated from protobuf field <code>optional uint32 invalid_misc = 5 [json_name = "invalidMisc"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setInvalidMisc($var)
    {
        GPBUtil::checkUint32($var);
        $this->invalid_misc = $var;

        return $this;
    }
}
