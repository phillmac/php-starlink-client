<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/wifi.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.WifiSetupRequest</code>
 */
class WifiSetupRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bool skip = 1 [json_name = "skip"];</code>
     */
    protected $skip = null;

    /**
     * Generated from protobuf field <code>optional string network_name = 2 [json_name = "networkName"];</code>
     */
    protected $network_name = null;

    /**
     * Generated from protobuf field <code>optional string network_password = 3 [json_name = "networkPassword"];</code>
     */
    protected $network_password = null;

    /**
     * Generated from protobuf field <code>optional bool bypass = 4 [json_name = "bypass"];</code>
     */
    protected $bypass = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type bool $skip
     * @type string $network_name
     * @type string $network_password
     * @type bool $bypass
     *            }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Wifi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bool skip = 1 [json_name = "skip"];</code>
     *
     * @return bool
     */
    public function getSkip()
    {
        return isset($this->skip) ? $this->skip : false;
    }

    public function hasSkip()
    {
        return isset($this->skip);
    }

    public function clearSkip()
    {
        unset($this->skip);
    }

    /**
     * Generated from protobuf field <code>optional bool skip = 1 [json_name = "skip"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setSkip($var)
    {
        GPBUtil::checkBool($var);
        $this->skip = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string network_name = 2 [json_name = "networkName"];</code>
     *
     * @return string
     */
    public function getNetworkName()
    {
        return isset($this->network_name) ? $this->network_name : '';
    }

    public function hasNetworkName()
    {
        return isset($this->network_name);
    }

    public function clearNetworkName()
    {
        unset($this->network_name);
    }

    /**
     * Generated from protobuf field <code>optional string network_name = 2 [json_name = "networkName"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setNetworkName($var)
    {
        GPBUtil::checkString($var, true);
        $this->network_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string network_password = 3 [json_name = "networkPassword"];</code>
     *
     * @return string
     */
    public function getNetworkPassword()
    {
        return isset($this->network_password) ? $this->network_password : '';
    }

    public function hasNetworkPassword()
    {
        return isset($this->network_password);
    }

    public function clearNetworkPassword()
    {
        unset($this->network_password);
    }

    /**
     * Generated from protobuf field <code>optional string network_password = 3 [json_name = "networkPassword"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setNetworkPassword($var)
    {
        GPBUtil::checkString($var, true);
        $this->network_password = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool bypass = 4 [json_name = "bypass"];</code>
     *
     * @return bool
     */
    public function getBypass()
    {
        return isset($this->bypass) ? $this->bypass : false;
    }

    public function hasBypass()
    {
        return isset($this->bypass);
    }

    public function clearBypass()
    {
        unset($this->bypass);
    }

    /**
     * Generated from protobuf field <code>optional bool bypass = 4 [json_name = "bypass"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setBypass($var)
    {
        GPBUtil::checkBool($var);
        $this->bypass = $var;

        return $this;
    }
}
