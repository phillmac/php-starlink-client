<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/common.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.WifiNetworkInterface</code>
 */
class WifiNetworkInterface extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts invalid_packet_counts = 2 [json_name = "invalidPacketCounts"];</code>
     */
    protected $invalid_packet_counts = null;

    /**
     * Generated from protobuf field <code>optional uint32 channel = 3 [json_name = "channel"];</code>
     */
    protected $channel = null;

    /**
     * Generated from protobuf field <code>optional uint32 missed_beacons = 8 [json_name = "missedBeacons"];</code>
     */
    protected $missed_beacons = null;

    /**
     * Generated from protobuf field <code>optional double link_quality = 4 [json_name = "linkQuality"];</code>
     */
    protected $link_quality = null;

    /**
     * Generated from protobuf field <code>optional double signal_level = 5 [json_name = "signalLevel"];</code>
     */
    protected $signal_level = null;

    /**
     * Generated from protobuf field <code>optional double noise_level = 6 [json_name = "noiseLevel"];</code>
     */
    protected $noise_level = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type \SpaceX\API\Device\WifiNetworkInterface\InvalidPacketCounts $invalid_packet_counts
     * @type int $channel
     * @type int $missed_beacons
     * @type float $link_quality
     * @type float $signal_level
     * @type float $noise_level
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts invalid_packet_counts = 2 [json_name = "invalidPacketCounts"];</code>
     *
     * @return \SpaceX\API\Device\WifiNetworkInterface\InvalidPacketCounts|null
     */
    public function getInvalidPacketCounts()
    {
        return $this->invalid_packet_counts;
    }

    public function hasInvalidPacketCounts()
    {
        return isset($this->invalid_packet_counts);
    }

    public function clearInvalidPacketCounts()
    {
        unset($this->invalid_packet_counts);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts invalid_packet_counts = 2 [json_name = "invalidPacketCounts"];</code>
     *
     * @param  \SpaceX\API\Device\WifiNetworkInterface\InvalidPacketCounts  $var
     * @return $this
     */
    public function setInvalidPacketCounts($var)
    {
        GPBUtil::checkMessage($var, \SpaceX\API\Device\WifiNetworkInterface\InvalidPacketCounts::class);
        $this->invalid_packet_counts = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 channel = 3 [json_name = "channel"];</code>
     *
     * @return int
     */
    public function getChannel()
    {
        return isset($this->channel) ? $this->channel : 0;
    }

    public function hasChannel()
    {
        return isset($this->channel);
    }

    public function clearChannel()
    {
        unset($this->channel);
    }

    /**
     * Generated from protobuf field <code>optional uint32 channel = 3 [json_name = "channel"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setChannel($var)
    {
        GPBUtil::checkUint32($var);
        $this->channel = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 missed_beacons = 8 [json_name = "missedBeacons"];</code>
     *
     * @return int
     */
    public function getMissedBeacons()
    {
        return isset($this->missed_beacons) ? $this->missed_beacons : 0;
    }

    public function hasMissedBeacons()
    {
        return isset($this->missed_beacons);
    }

    public function clearMissedBeacons()
    {
        unset($this->missed_beacons);
    }

    /**
     * Generated from protobuf field <code>optional uint32 missed_beacons = 8 [json_name = "missedBeacons"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setMissedBeacons($var)
    {
        GPBUtil::checkUint32($var);
        $this->missed_beacons = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double link_quality = 4 [json_name = "linkQuality"];</code>
     *
     * @return float
     */
    public function getLinkQuality()
    {
        return isset($this->link_quality) ? $this->link_quality : 0.0;
    }

    public function hasLinkQuality()
    {
        return isset($this->link_quality);
    }

    public function clearLinkQuality()
    {
        unset($this->link_quality);
    }

    /**
     * Generated from protobuf field <code>optional double link_quality = 4 [json_name = "linkQuality"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setLinkQuality($var)
    {
        GPBUtil::checkDouble($var);
        $this->link_quality = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double signal_level = 5 [json_name = "signalLevel"];</code>
     *
     * @return float
     */
    public function getSignalLevel()
    {
        return isset($this->signal_level) ? $this->signal_level : 0.0;
    }

    public function hasSignalLevel()
    {
        return isset($this->signal_level);
    }

    public function clearSignalLevel()
    {
        unset($this->signal_level);
    }

    /**
     * Generated from protobuf field <code>optional double signal_level = 5 [json_name = "signalLevel"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setSignalLevel($var)
    {
        GPBUtil::checkDouble($var);
        $this->signal_level = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double noise_level = 6 [json_name = "noiseLevel"];</code>
     *
     * @return float
     */
    public function getNoiseLevel()
    {
        return isset($this->noise_level) ? $this->noise_level : 0.0;
    }

    public function hasNoiseLevel()
    {
        return isset($this->noise_level);
    }

    public function clearNoiseLevel()
    {
        unset($this->noise_level);
    }

    /**
     * Generated from protobuf field <code>optional double noise_level = 6 [json_name = "noiseLevel"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setNoiseLevel($var)
    {
        GPBUtil::checkDouble($var);
        $this->noise_level = $var;

        return $this;
    }
}
