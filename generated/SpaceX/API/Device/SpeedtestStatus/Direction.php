<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/device.proto

namespace SpaceX\API\Device\SpeedtestStatus;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.SpeedtestStatus.Direction</code>
 */
class Direction extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];</code>
     */
    private $throughputs_mbps;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestError err = 2 [json_name = "err"];</code>
     */
    protected $err = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type array<float>|\Google\Protobuf\Internal\RepeatedField $throughputs_mbps
     * @type int $err
     *           }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];</code>
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getThroughputsMbps()
    {
        return $this->throughputs_mbps;
    }

    /**
     * Generated from protobuf field <code>repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];</code>
     *
     * @param  array<float>|\Google\Protobuf\Internal\RepeatedField  $var
     * @return $this
     */
    public function setThroughputsMbps($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->throughputs_mbps = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestError err = 2 [json_name = "err"];</code>
     *
     * @return int
     */
    public function getErr()
    {
        return isset($this->err) ? $this->err : 0;
    }

    public function hasErr()
    {
        return isset($this->err);
    }

    public function clearErr()
    {
        unset($this->err);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedtestError err = 2 [json_name = "err"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setErr($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\SpeedtestError::class);
        $this->err = $var;

        return $this;
    }
}
