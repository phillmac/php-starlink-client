<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/common.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.Quaternion</code>
 */
class Quaternion extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional float q_scalar = 1 [json_name = "qScalar"];</code>
     */
    protected $q_scalar = null;

    /**
     * Generated from protobuf field <code>optional float q_x = 2 [json_name = "qX"];</code>
     */
    protected $q_x = null;

    /**
     * Generated from protobuf field <code>optional float q_y = 3 [json_name = "qY"];</code>
     */
    protected $q_y = null;

    /**
     * Generated from protobuf field <code>optional float q_z = 4 [json_name = "qZ"];</code>
     */
    protected $q_z = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type float $q_scalar
     * @type float $q_x
     * @type float $q_y
     * @type float $q_z
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional float q_scalar = 1 [json_name = "qScalar"];</code>
     *
     * @return float
     */
    public function getQScalar()
    {
        return isset($this->q_scalar) ? $this->q_scalar : 0.0;
    }

    public function hasQScalar()
    {
        return isset($this->q_scalar);
    }

    public function clearQScalar()
    {
        unset($this->q_scalar);
    }

    /**
     * Generated from protobuf field <code>optional float q_scalar = 1 [json_name = "qScalar"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setQScalar($var)
    {
        GPBUtil::checkFloat($var);
        $this->q_scalar = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float q_x = 2 [json_name = "qX"];</code>
     *
     * @return float
     */
    public function getQX()
    {
        return isset($this->q_x) ? $this->q_x : 0.0;
    }

    public function hasQX()
    {
        return isset($this->q_x);
    }

    public function clearQX()
    {
        unset($this->q_x);
    }

    /**
     * Generated from protobuf field <code>optional float q_x = 2 [json_name = "qX"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setQX($var)
    {
        GPBUtil::checkFloat($var);
        $this->q_x = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float q_y = 3 [json_name = "qY"];</code>
     *
     * @return float
     */
    public function getQY()
    {
        return isset($this->q_y) ? $this->q_y : 0.0;
    }

    public function hasQY()
    {
        return isset($this->q_y);
    }

    public function clearQY()
    {
        unset($this->q_y);
    }

    /**
     * Generated from protobuf field <code>optional float q_y = 3 [json_name = "qY"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setQY($var)
    {
        GPBUtil::checkFloat($var);
        $this->q_y = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float q_z = 4 [json_name = "qZ"];</code>
     *
     * @return float
     */
    public function getQZ()
    {
        return isset($this->q_z) ? $this->q_z : 0.0;
    }

    public function hasQZ()
    {
        return isset($this->q_z);
    }

    public function clearQZ()
    {
        unset($this->q_z);
    }

    /**
     * Generated from protobuf field <code>optional float q_z = 4 [json_name = "qZ"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setQZ($var)
    {
        GPBUtil::checkFloat($var);
        $this->q_z = $var;

        return $this;
    }
}
