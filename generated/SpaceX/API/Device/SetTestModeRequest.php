<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/dish.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.SetTestModeRequest</code>
 */
class SetTestModeRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SetTestModeRequest.RfMode rf_mode = 1 [json_name = "rfMode"];</code>
     */
    protected $rf_mode = null;

    /**
     * Generated from protobuf field <code>optional bool disable_loss_of_comm_fdir = 1001 [json_name = "disableLossOfCommFdir"];</code>
     */
    protected $disable_loss_of_comm_fdir = null;

    /**
     * Generated from protobuf field <code>optional bool enable_rules_override = 1002 [json_name = "enableRulesOverride"];</code>
     */
    protected $enable_rules_override = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type int $rf_mode
     * @type bool $disable_loss_of_comm_fdir
     * @type bool $enable_rules_override
     *            }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Dish::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SetTestModeRequest.RfMode rf_mode = 1 [json_name = "rfMode"];</code>
     *
     * @return int
     */
    public function getRfMode()
    {
        return isset($this->rf_mode) ? $this->rf_mode : 0;
    }

    public function hasRfMode()
    {
        return isset($this->rf_mode);
    }

    public function clearRfMode()
    {
        unset($this->rf_mode);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SetTestModeRequest.RfMode rf_mode = 1 [json_name = "rfMode"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRfMode($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\SetTestModeRequest\RfMode::class);
        $this->rf_mode = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool disable_loss_of_comm_fdir = 1001 [json_name = "disableLossOfCommFdir"];</code>
     *
     * @return bool
     */
    public function getDisableLossOfCommFdir()
    {
        return isset($this->disable_loss_of_comm_fdir) ? $this->disable_loss_of_comm_fdir : false;
    }

    public function hasDisableLossOfCommFdir()
    {
        return isset($this->disable_loss_of_comm_fdir);
    }

    public function clearDisableLossOfCommFdir()
    {
        unset($this->disable_loss_of_comm_fdir);
    }

    /**
     * Generated from protobuf field <code>optional bool disable_loss_of_comm_fdir = 1001 [json_name = "disableLossOfCommFdir"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setDisableLossOfCommFdir($var)
    {
        GPBUtil::checkBool($var);
        $this->disable_loss_of_comm_fdir = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool enable_rules_override = 1002 [json_name = "enableRulesOverride"];</code>
     *
     * @return bool
     */
    public function getEnableRulesOverride()
    {
        return isset($this->enable_rules_override) ? $this->enable_rules_override : false;
    }

    public function hasEnableRulesOverride()
    {
        return isset($this->enable_rules_override);
    }

    public function clearEnableRulesOverride()
    {
        unset($this->enable_rules_override);
    }

    /**
     * Generated from protobuf field <code>optional bool enable_rules_override = 1002 [json_name = "enableRulesOverride"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setEnableRulesOverride($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_rules_override = $var;

        return $this;
    }
}
