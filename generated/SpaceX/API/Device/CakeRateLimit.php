<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/wifi_config.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.CakeRateLimit</code>
 */
class CakeRateLimit extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional uint32 host_mark = 1 [json_name = "hostMark"];</code>
     */
    protected $host_mark = null;

    /**
     * Generated from protobuf field <code>optional float bandwidth = 2 [json_name = "bandwidth"];</code>
     */
    protected $bandwidth = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.CakePriorityQueueParameter priority_queue_parameter = 3 [json_name = "priorityQueueParameter"];</code>
     */
    protected $priority_queue_parameter = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.CakeAckFilter ack_filter = 4 [json_name = "ackFilter"];</code>
     */
    protected $ack_filter = null;

    /**
     * Generated from protobuf field <code>optional float manual_rtt = 6 [json_name = "manualRtt"];</code>
     */
    protected $manual_rtt = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type int $host_mark
     * @type float $bandwidth
     * @type int $priority_queue_parameter
     * @type int $ack_filter
     * @type float $manual_rtt
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\WifiConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional uint32 host_mark = 1 [json_name = "hostMark"];</code>
     *
     * @return int
     */
    public function getHostMark()
    {
        return isset($this->host_mark) ? $this->host_mark : 0;
    }

    public function hasHostMark()
    {
        return isset($this->host_mark);
    }

    public function clearHostMark()
    {
        unset($this->host_mark);
    }

    /**
     * Generated from protobuf field <code>optional uint32 host_mark = 1 [json_name = "hostMark"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setHostMark($var)
    {
        GPBUtil::checkUint32($var);
        $this->host_mark = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float bandwidth = 2 [json_name = "bandwidth"];</code>
     *
     * @return float
     */
    public function getBandwidth()
    {
        return isset($this->bandwidth) ? $this->bandwidth : 0.0;
    }

    public function hasBandwidth()
    {
        return isset($this->bandwidth);
    }

    public function clearBandwidth()
    {
        unset($this->bandwidth);
    }

    /**
     * Generated from protobuf field <code>optional float bandwidth = 2 [json_name = "bandwidth"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setBandwidth($var)
    {
        GPBUtil::checkFloat($var);
        $this->bandwidth = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.CakePriorityQueueParameter priority_queue_parameter = 3 [json_name = "priorityQueueParameter"];</code>
     *
     * @return int
     */
    public function getPriorityQueueParameter()
    {
        return isset($this->priority_queue_parameter) ? $this->priority_queue_parameter : 0;
    }

    public function hasPriorityQueueParameter()
    {
        return isset($this->priority_queue_parameter);
    }

    public function clearPriorityQueueParameter()
    {
        unset($this->priority_queue_parameter);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.CakePriorityQueueParameter priority_queue_parameter = 3 [json_name = "priorityQueueParameter"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPriorityQueueParameter($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\CakePriorityQueueParameter::class);
        $this->priority_queue_parameter = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.CakeAckFilter ack_filter = 4 [json_name = "ackFilter"];</code>
     *
     * @return int
     */
    public function getAckFilter()
    {
        return isset($this->ack_filter) ? $this->ack_filter : 0;
    }

    public function hasAckFilter()
    {
        return isset($this->ack_filter);
    }

    public function clearAckFilter()
    {
        unset($this->ack_filter);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.CakeAckFilter ack_filter = 4 [json_name = "ackFilter"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setAckFilter($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\CakeAckFilter::class);
        $this->ack_filter = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float manual_rtt = 6 [json_name = "manualRtt"];</code>
     *
     * @return float
     */
    public function getManualRtt()
    {
        return isset($this->manual_rtt) ? $this->manual_rtt : 0.0;
    }

    public function hasManualRtt()
    {
        return isset($this->manual_rtt);
    }

    public function clearManualRtt()
    {
        unset($this->manual_rtt);
    }

    /**
     * Generated from protobuf field <code>optional float manual_rtt = 6 [json_name = "manualRtt"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setManualRtt($var)
    {
        GPBUtil::checkFloat($var);
        $this->manual_rtt = $var;

        return $this;
    }
}
