<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/transceiver.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.TransceiverGetStatusResponse</code>
 */
class TransceiverGetStatusResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverModulatorState mod_state = 1 [json_name = "modState"];</code>
     */
    protected $mod_state = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverModulatorState demod_state = 2 [json_name = "demodState"];</code>
     */
    protected $demod_state = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTxRxState tx_state = 3 [json_name = "txState"];</code>
     */
    protected $tx_state = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTxRxState rx_state = 4 [json_name = "rxState"];</code>
     */
    protected $rx_state = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.DishState state = 1006 [json_name = "state"];</code>
     */
    protected $state = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverFaults faults = 1007 [json_name = "faults"];</code>
     */
    protected $faults = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTransmitBlankingState transmit_blanking_state = 1008 [json_name = "transmitBlankingState"];</code>
     */
    protected $transmit_blanking_state = null;

    /**
     * Generated from protobuf field <code>optional float modem_asic_temp = 1009 [json_name = "modemAsicTemp"];</code>
     */
    protected $modem_asic_temp = null;

    /**
     * Generated from protobuf field <code>optional float tx_if_temp = 1010 [json_name = "txIfTemp"];</code>
     */
    protected $tx_if_temp = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type int $mod_state
     * @type int $demod_state
     * @type int $tx_state
     * @type int $rx_state
     * @type int $state
     * @type \SpaceX\API\Device\TransceiverFaults $faults
     * @type int $transmit_blanking_state
     * @type float $modem_asic_temp
     * @type float $tx_if_temp
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Transceiver::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverModulatorState mod_state = 1 [json_name = "modState"];</code>
     *
     * @return int
     */
    public function getModState()
    {
        return isset($this->mod_state) ? $this->mod_state : 0;
    }

    public function hasModState()
    {
        return isset($this->mod_state);
    }

    public function clearModState()
    {
        unset($this->mod_state);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverModulatorState mod_state = 1 [json_name = "modState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setModState($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\TransceiverModulatorState::class);
        $this->mod_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverModulatorState demod_state = 2 [json_name = "demodState"];</code>
     *
     * @return int
     */
    public function getDemodState()
    {
        return isset($this->demod_state) ? $this->demod_state : 0;
    }

    public function hasDemodState()
    {
        return isset($this->demod_state);
    }

    public function clearDemodState()
    {
        unset($this->demod_state);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverModulatorState demod_state = 2 [json_name = "demodState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setDemodState($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\TransceiverModulatorState::class);
        $this->demod_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTxRxState tx_state = 3 [json_name = "txState"];</code>
     *
     * @return int
     */
    public function getTxState()
    {
        return isset($this->tx_state) ? $this->tx_state : 0;
    }

    public function hasTxState()
    {
        return isset($this->tx_state);
    }

    public function clearTxState()
    {
        unset($this->tx_state);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTxRxState tx_state = 3 [json_name = "txState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTxState($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\TransceiverTxRxState::class);
        $this->tx_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTxRxState rx_state = 4 [json_name = "rxState"];</code>
     *
     * @return int
     */
    public function getRxState()
    {
        return isset($this->rx_state) ? $this->rx_state : 0;
    }

    public function hasRxState()
    {
        return isset($this->rx_state);
    }

    public function clearRxState()
    {
        unset($this->rx_state);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTxRxState rx_state = 4 [json_name = "rxState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxState($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\TransceiverTxRxState::class);
        $this->rx_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.DishState state = 1006 [json_name = "state"];</code>
     *
     * @return int
     */
    public function getState()
    {
        return isset($this->state) ? $this->state : 0;
    }

    public function hasState()
    {
        return isset($this->state);
    }

    public function clearState()
    {
        unset($this->state);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.DishState state = 1006 [json_name = "state"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\DishState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverFaults faults = 1007 [json_name = "faults"];</code>
     *
     * @return \SpaceX\API\Device\TransceiverFaults|null
     */
    public function getFaults()
    {
        return $this->faults;
    }

    public function hasFaults()
    {
        return isset($this->faults);
    }

    public function clearFaults()
    {
        unset($this->faults);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverFaults faults = 1007 [json_name = "faults"];</code>
     *
     * @param  \SpaceX\API\Device\TransceiverFaults  $var
     * @return $this
     */
    public function setFaults($var)
    {
        GPBUtil::checkMessage($var, \SpaceX\API\Device\TransceiverFaults::class);
        $this->faults = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTransmitBlankingState transmit_blanking_state = 1008 [json_name = "transmitBlankingState"];</code>
     *
     * @return int
     */
    public function getTransmitBlankingState()
    {
        return isset($this->transmit_blanking_state) ? $this->transmit_blanking_state : 0;
    }

    public function hasTransmitBlankingState()
    {
        return isset($this->transmit_blanking_state);
    }

    public function clearTransmitBlankingState()
    {
        unset($this->transmit_blanking_state);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.TransceiverTransmitBlankingState transmit_blanking_state = 1008 [json_name = "transmitBlankingState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTransmitBlankingState($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\TransceiverTransmitBlankingState::class);
        $this->transmit_blanking_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float modem_asic_temp = 1009 [json_name = "modemAsicTemp"];</code>
     *
     * @return float
     */
    public function getModemAsicTemp()
    {
        return isset($this->modem_asic_temp) ? $this->modem_asic_temp : 0.0;
    }

    public function hasModemAsicTemp()
    {
        return isset($this->modem_asic_temp);
    }

    public function clearModemAsicTemp()
    {
        unset($this->modem_asic_temp);
    }

    /**
     * Generated from protobuf field <code>optional float modem_asic_temp = 1009 [json_name = "modemAsicTemp"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setModemAsicTemp($var)
    {
        GPBUtil::checkFloat($var);
        $this->modem_asic_temp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float tx_if_temp = 1010 [json_name = "txIfTemp"];</code>
     *
     * @return float
     */
    public function getTxIfTemp()
    {
        return isset($this->tx_if_temp) ? $this->tx_if_temp : 0.0;
    }

    public function hasTxIfTemp()
    {
        return isset($this->tx_if_temp);
    }

    public function clearTxIfTemp()
    {
        unset($this->tx_if_temp);
    }

    /**
     * Generated from protobuf field <code>optional float tx_if_temp = 1010 [json_name = "txIfTemp"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setTxIfTemp($var)
    {
        GPBUtil::checkFloat($var);
        $this->tx_if_temp = $var;

        return $this;
    }
}
