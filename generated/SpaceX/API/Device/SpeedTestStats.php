<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/device.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.SpeedTestStats</code>
 */
class SpeedTestStats extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional float latency_ms = 3 [json_name = "latencyMs"];</code>
     */
    protected $latency_ms = null;

    /**
     * Generated from protobuf field <code>optional uint64 start_time = 4 [json_name = "startTime"];</code>
     */
    protected $start_time = null;

    /**
     * Generated from protobuf field <code>optional int64 upload_start_time = 5 [json_name = "uploadStartTime"];</code>
     */
    protected $upload_start_time = null;

    /**
     * Generated from protobuf field <code>optional int64 download_start_time = 6 [json_name = "downloadStartTime"];</code>
     */
    protected $download_start_time = null;

    /**
     * Generated from protobuf field <code>optional float upload_mbps = 1 [json_name = "uploadMbps"];</code>
     */
    protected $upload_mbps = null;

    /**
     * Generated from protobuf field <code>optional float download_mbps = 2 [json_name = "downloadMbps"];</code>
     */
    protected $download_mbps = null;

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedTestStats.Target target = 7 [json_name = "target"];</code>
     */
    protected $target = null;

    /**
     * Generated from protobuf field <code>optional uint32 tcp_streams = 8 [json_name = "tcpStreams"];</code>
     */
    protected $tcp_streams = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type float $latency_ms
     * @type int|string $start_time
     * @type int|string $upload_start_time
     * @type int|string $download_start_time
     * @type float $upload_mbps
     * @type float $download_mbps
     * @type int $target
     * @type int $tcp_streams
     *           }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional float latency_ms = 3 [json_name = "latencyMs"];</code>
     *
     * @return float
     */
    public function getLatencyMs()
    {
        return isset($this->latency_ms) ? $this->latency_ms : 0.0;
    }

    public function hasLatencyMs()
    {
        return isset($this->latency_ms);
    }

    public function clearLatencyMs()
    {
        unset($this->latency_ms);
    }

    /**
     * Generated from protobuf field <code>optional float latency_ms = 3 [json_name = "latencyMs"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setLatencyMs($var)
    {
        GPBUtil::checkFloat($var);
        $this->latency_ms = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint64 start_time = 4 [json_name = "startTime"];</code>
     *
     * @return int|string
     */
    public function getStartTime()
    {
        return isset($this->start_time) ? $this->start_time : 0;
    }

    public function hasStartTime()
    {
        return isset($this->start_time);
    }

    public function clearStartTime()
    {
        unset($this->start_time);
    }

    /**
     * Generated from protobuf field <code>optional uint64 start_time = 4 [json_name = "startTime"];</code>
     *
     * @param  int|string  $var
     * @return $this
     */
    public function setStartTime($var)
    {
        GPBUtil::checkUint64($var);
        $this->start_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int64 upload_start_time = 5 [json_name = "uploadStartTime"];</code>
     *
     * @return int|string
     */
    public function getUploadStartTime()
    {
        return isset($this->upload_start_time) ? $this->upload_start_time : 0;
    }

    public function hasUploadStartTime()
    {
        return isset($this->upload_start_time);
    }

    public function clearUploadStartTime()
    {
        unset($this->upload_start_time);
    }

    /**
     * Generated from protobuf field <code>optional int64 upload_start_time = 5 [json_name = "uploadStartTime"];</code>
     *
     * @param  int|string  $var
     * @return $this
     */
    public function setUploadStartTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->upload_start_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int64 download_start_time = 6 [json_name = "downloadStartTime"];</code>
     *
     * @return int|string
     */
    public function getDownloadStartTime()
    {
        return isset($this->download_start_time) ? $this->download_start_time : 0;
    }

    public function hasDownloadStartTime()
    {
        return isset($this->download_start_time);
    }

    public function clearDownloadStartTime()
    {
        unset($this->download_start_time);
    }

    /**
     * Generated from protobuf field <code>optional int64 download_start_time = 6 [json_name = "downloadStartTime"];</code>
     *
     * @param  int|string  $var
     * @return $this
     */
    public function setDownloadStartTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->download_start_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float upload_mbps = 1 [json_name = "uploadMbps"];</code>
     *
     * @return float
     */
    public function getUploadMbps()
    {
        return isset($this->upload_mbps) ? $this->upload_mbps : 0.0;
    }

    public function hasUploadMbps()
    {
        return isset($this->upload_mbps);
    }

    public function clearUploadMbps()
    {
        unset($this->upload_mbps);
    }

    /**
     * Generated from protobuf field <code>optional float upload_mbps = 1 [json_name = "uploadMbps"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setUploadMbps($var)
    {
        GPBUtil::checkFloat($var);
        $this->upload_mbps = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float download_mbps = 2 [json_name = "downloadMbps"];</code>
     *
     * @return float
     */
    public function getDownloadMbps()
    {
        return isset($this->download_mbps) ? $this->download_mbps : 0.0;
    }

    public function hasDownloadMbps()
    {
        return isset($this->download_mbps);
    }

    public function clearDownloadMbps()
    {
        unset($this->download_mbps);
    }

    /**
     * Generated from protobuf field <code>optional float download_mbps = 2 [json_name = "downloadMbps"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setDownloadMbps($var)
    {
        GPBUtil::checkFloat($var);
        $this->download_mbps = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedTestStats.Target target = 7 [json_name = "target"];</code>
     *
     * @return int
     */
    public function getTarget()
    {
        return isset($this->target) ? $this->target : 0;
    }

    public function hasTarget()
    {
        return isset($this->target);
    }

    public function clearTarget()
    {
        unset($this->target);
    }

    /**
     * Generated from protobuf field <code>optional .SpaceX.API.Device.SpeedTestStats.Target target = 7 [json_name = "target"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTarget($var)
    {
        GPBUtil::checkEnum($var, \SpaceX\API\Device\SpeedTestStats\Target::class);
        $this->target = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 tcp_streams = 8 [json_name = "tcpStreams"];</code>
     *
     * @return int
     */
    public function getTcpStreams()
    {
        return isset($this->tcp_streams) ? $this->tcp_streams : 0;
    }

    public function hasTcpStreams()
    {
        return isset($this->tcp_streams);
    }

    public function clearTcpStreams()
    {
        unset($this->tcp_streams);
    }

    /**
     * Generated from protobuf field <code>optional uint32 tcp_streams = 8 [json_name = "tcpStreams"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTcpStreams($var)
    {
        GPBUtil::checkUint32($var);
        $this->tcp_streams = $var;

        return $this;
    }
}
