<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/device.proto

namespace SpaceX\API\Device;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.DishGetEmcResponse</code>
 */
class DishGetEmcResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string uuid = 2 [json_name = "uuid"];</code>
     */
    protected $uuid = null;

    /**
     * Generated from protobuf field <code>optional uint64 timestamp = 3 [json_name = "timestamp"];</code>
     */
    protected $timestamp = null;

    /**
     * Generated from protobuf field <code>optional uint32 cplane_updates = 11 [json_name = "cplaneUpdates"];</code>
     */
    protected $cplane_updates = null;

    /**
     * Generated from protobuf field <code>optional double gps_latitude = 16 [json_name = "gpsLatitude"];</code>
     */
    protected $gps_latitude = null;

    /**
     * Generated from protobuf field <code>optional double gps_longitude = 17 [json_name = "gpsLongitude"];</code>
     */
    protected $gps_longitude = null;

    /**
     * Generated from protobuf field <code>optional double gps_pdop = 18 [json_name = "gpsPdop"];</code>
     */
    protected $gps_pdop = null;

    /**
     * Generated from protobuf field <code>optional uint32 rf_mode = 19 [json_name = "rfMode"];</code>
     */
    protected $rf_mode = null;

    /**
     * Generated from protobuf field <code>optional double phi = 20 [json_name = "phi"];</code>
     */
    protected $phi = null;

    /**
     * Generated from protobuf field <code>optional double theta = 21 [json_name = "theta"];</code>
     */
    protected $theta = null;

    /**
     * Generated from protobuf field <code>optional uint32 rx_channel = 22 [json_name = "rxChannel"];</code>
     */
    protected $rx_channel = null;

    /**
     * Generated from protobuf field <code>optional uint32 tx_channel = 23 [json_name = "txChannel"];</code>
     */
    protected $tx_channel = null;

    /**
     * Generated from protobuf field <code>optional float t_dbf_max = 24 [json_name = "tDbfMax"];</code>
     */
    protected $t_dbf_max = null;

    /**
     * Generated from protobuf field <code>optional double t_center = 25 [json_name = "tCenter"];</code>
     */
    protected $t_center = null;

    /**
     * Generated from protobuf field <code>optional bool auto_power_snow_melt_enabled = 30 [json_name = "autoPowerSnowMeltEnabled"];</code>
     */
    protected $auto_power_snow_melt_enabled = null;

    /**
     * Generated from protobuf field <code>optional double voltage = 32 [json_name = "voltage"];</code>
     */
    protected $voltage = null;

    /**
     * Generated from protobuf field <code>optional uint32 rx_beam_state = 33 [json_name = "rxBeamState"];</code>
     */
    protected $rx_beam_state = null;

    /**
     * Generated from protobuf field <code>optional uint32 tx_beam_state = 34 [json_name = "txBeamState"];</code>
     */
    protected $tx_beam_state = null;

    /**
     * Generated from protobuf field <code>optional uint32 half_duplex_state = 35 [json_name = "halfDuplexState"];</code>
     */
    protected $half_duplex_state = null;

    /**
     * Generated from protobuf field <code>optional bool manual_tilt_enabled = 36 [json_name = "manualTiltEnabled"];</code>
     */
    protected $manual_tilt_enabled = null;

    /**
     * Generated from protobuf field <code>optional double tilt_angle = 37 [json_name = "tiltAngle"];</code>
     */
    protected $tilt_angle = null;

    /**
     * Generated from protobuf field <code>optional uint32 pll_tx_lock_detected = 38 [json_name = "pllTxLockDetected"];</code>
     */
    protected $pll_tx_lock_detected = null;

    /**
     * Generated from protobuf field <code>optional bool eirp_exceeded_threshold = 39 [json_name = "eirpExceededThreshold"];</code>
     */
    protected $eirp_exceeded_threshold = null;

    /**
     * Generated from protobuf field <code>optional bool idle_override_enabled = 41 [json_name = "idleOverrideEnabled"];</code>
     */
    protected $idle_override_enabled = null;

    /**
     * Generated from protobuf field <code>optional bool theta_override_enabled = 42 [json_name = "thetaOverrideEnabled"];</code>
     */
    protected $theta_override_enabled = null;

    /**
     * Generated from protobuf field <code>optional double theta_override_value = 43 [json_name = "thetaOverrideValue"];</code>
     */
    protected $theta_override_value = null;

    /**
     * Generated from protobuf field <code>optional bool phi_override_enabled = 44 [json_name = "phiOverrideEnabled"];</code>
     */
    protected $phi_override_enabled = null;

    /**
     * Generated from protobuf field <code>optional double phi_override_value = 45 [json_name = "phiOverrideValue"];</code>
     */
    protected $phi_override_value = null;

    /**
     * Generated from protobuf field <code>optional uint32 rx_chan_override_value = 46 [json_name = "rxChanOverrideValue"];</code>
     */
    protected $rx_chan_override_value = null;

    /**
     * Generated from protobuf field <code>optional uint32 tx_chan_override_value = 47 [json_name = "txChanOverrideValue"];</code>
     */
    protected $tx_chan_override_value = null;

    /**
     * Generated from protobuf field <code>optional bool sky_search_override_enabled = 48 [json_name = "skySearchOverrideEnabled"];</code>
     */
    protected $sky_search_override_enabled = null;

    /**
     * Generated from protobuf field <code>optional bool fast_switching_enabled = 49 [json_name = "fastSwitchingEnabled"];</code>
     */
    protected $fast_switching_enabled = null;

    /**
     * Generated from protobuf field <code>optional uint32 modulation_override_value = 50 [json_name = "modulationOverrideValue"];</code>
     */
    protected $modulation_override_value = null;

    /**
     * Generated from protobuf field <code>optional bool force_eirp_failure = 51 [json_name = "forceEirpFailure"];</code>
     */
    protected $force_eirp_failure = null;

    /**
     * Generated from protobuf field <code>optional bool force_pll_unlock = 52 [json_name = "forcePllUnlock"];</code>
     */
    protected $force_pll_unlock = null;

    /**
     * Generated from protobuf field <code>optional uint32 ut_ine_success = 53 [json_name = "utIneSuccess"];</code>
     */
    protected $ut_ine_success = null;

    /**
     * Generated from protobuf field <code>optional bool rf_ready = 54 [json_name = "rfReady"];</code>
     */
    protected $rf_ready = null;

    /**
     * Generated from protobuf field <code>optional bool tilt_to_stowed = 55 [json_name = "tiltToStowed"];</code>
     */
    protected $tilt_to_stowed = null;

    /**
     * Generated from protobuf field <code>optional bool reboot = 56 [json_name = "reboot"];</code>
     */
    protected $reboot = null;

    /**
     * Generated from protobuf field <code>optional bool continuous_motor_test = 57 [json_name = "continuousMotorTest"];</code>
     */
    protected $continuous_motor_test = null;

    /**
     * Generated from protobuf field <code>optional double distance_override_meters = 58 [json_name = "distanceOverrideMeters"];</code>
     */
    protected $distance_override_meters = null;

    /**
     * Generated from protobuf field <code>optional uint32 country_code_override = 62 [json_name = "countryCodeOverride"];</code>
     */
    protected $country_code_override = null;

    /**
     * Generated from protobuf field <code>optional double max_pointing_distance = 63 [json_name = "maxPointingDistance"];</code>
     */
    protected $max_pointing_distance = null;

    /**
     * Generated from protobuf field <code>optional double distance_scaling_factor = 64 [json_name = "distanceScalingFactor"];</code>
     */
    protected $distance_scaling_factor = null;

    /**
     * Generated from protobuf field <code>optional int32 tx_duty_cycle_override = 65 [json_name = "txDutyCycleOverride"];</code>
     */
    protected $tx_duty_cycle_override = null;

    /**
     * Generated from protobuf field <code>optional int32 rx_duty_cycle_override = 66 [json_name = "rxDutyCycleOverride"];</code>
     */
    protected $rx_duty_cycle_override = null;

    /**
     * Generated from protobuf field <code>optional float tx_time_ms = 67 [json_name = "txTimeMs"];</code>
     */
    protected $tx_time_ms = null;

    /**
     * Generated from protobuf field <code>optional float rx_time_ms = 68 [json_name = "rxTimeMs"];</code>
     */
    protected $rx_time_ms = null;

    /**
     * Generated from protobuf field <code>optional double eirp_legal_limit_dbw = 69 [json_name = "eirpLegalLimitDbw"];</code>
     */
    protected $eirp_legal_limit_dbw = null;

    /**
     * Generated from protobuf field <code>optional double eirp_legal_limit_dbw_override = 70 [json_name = "eirpLegalLimitDbwOverride"];</code>
     */
    protected $eirp_legal_limit_dbw_override = null;

    /**
     * Generated from protobuf field <code>optional double eirp_adjustment_db = 71 [json_name = "eirpAdjustmentDb"];</code>
     */
    protected $eirp_adjustment_db = null;

    /**
     * Generated from protobuf field <code>optional double eirp_predicted_dbw = 72 [json_name = "eirpPredictedDbw"];</code>
     */
    protected $eirp_predicted_dbw = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type string $uuid
     * @type int|string $timestamp
     * @type int $cplane_updates
     * @type float $gps_latitude
     * @type float $gps_longitude
     * @type float $gps_pdop
     * @type int $rf_mode
     * @type float $phi
     * @type float $theta
     * @type int $rx_channel
     * @type int $tx_channel
     * @type float $t_dbf_max
     * @type float $t_center
     * @type bool $auto_power_snow_melt_enabled
     * @type float $voltage
     * @type int $rx_beam_state
     * @type int $tx_beam_state
     * @type int $half_duplex_state
     * @type bool $manual_tilt_enabled
     * @type float $tilt_angle
     * @type int $pll_tx_lock_detected
     * @type bool $eirp_exceeded_threshold
     * @type bool $idle_override_enabled
     * @type bool $theta_override_enabled
     * @type float $theta_override_value
     * @type bool $phi_override_enabled
     * @type float $phi_override_value
     * @type int $rx_chan_override_value
     * @type int $tx_chan_override_value
     * @type bool $sky_search_override_enabled
     * @type bool $fast_switching_enabled
     * @type int $modulation_override_value
     * @type bool $force_eirp_failure
     * @type bool $force_pll_unlock
     * @type int $ut_ine_success
     * @type bool $rf_ready
     * @type bool $tilt_to_stowed
     * @type bool $reboot
     * @type bool $continuous_motor_test
     * @type float $distance_override_meters
     * @type int $country_code_override
     * @type float $max_pointing_distance
     * @type float $distance_scaling_factor
     * @type int $tx_duty_cycle_override
     * @type int $rx_duty_cycle_override
     * @type float $tx_time_ms
     * @type float $rx_time_ms
     * @type float $eirp_legal_limit_dbw
     * @type float $eirp_legal_limit_dbw_override
     * @type float $eirp_adjustment_db
     * @type float $eirp_predicted_dbw
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string uuid = 2 [json_name = "uuid"];</code>
     *
     * @return string
     */
    public function getUuid()
    {
        return isset($this->uuid) ? $this->uuid : '';
    }

    public function hasUuid()
    {
        return isset($this->uuid);
    }

    public function clearUuid()
    {
        unset($this->uuid);
    }

    /**
     * Generated from protobuf field <code>optional string uuid = 2 [json_name = "uuid"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setUuid($var)
    {
        GPBUtil::checkString($var, true);
        $this->uuid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint64 timestamp = 3 [json_name = "timestamp"];</code>
     *
     * @return int|string
     */
    public function getTimestamp()
    {
        return isset($this->timestamp) ? $this->timestamp : 0;
    }

    public function hasTimestamp()
    {
        return isset($this->timestamp);
    }

    public function clearTimestamp()
    {
        unset($this->timestamp);
    }

    /**
     * Generated from protobuf field <code>optional uint64 timestamp = 3 [json_name = "timestamp"];</code>
     *
     * @param  int|string  $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkUint64($var);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 cplane_updates = 11 [json_name = "cplaneUpdates"];</code>
     *
     * @return int
     */
    public function getCplaneUpdates()
    {
        return isset($this->cplane_updates) ? $this->cplane_updates : 0;
    }

    public function hasCplaneUpdates()
    {
        return isset($this->cplane_updates);
    }

    public function clearCplaneUpdates()
    {
        unset($this->cplane_updates);
    }

    /**
     * Generated from protobuf field <code>optional uint32 cplane_updates = 11 [json_name = "cplaneUpdates"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setCplaneUpdates($var)
    {
        GPBUtil::checkUint32($var);
        $this->cplane_updates = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double gps_latitude = 16 [json_name = "gpsLatitude"];</code>
     *
     * @return float
     */
    public function getGpsLatitude()
    {
        return isset($this->gps_latitude) ? $this->gps_latitude : 0.0;
    }

    public function hasGpsLatitude()
    {
        return isset($this->gps_latitude);
    }

    public function clearGpsLatitude()
    {
        unset($this->gps_latitude);
    }

    /**
     * Generated from protobuf field <code>optional double gps_latitude = 16 [json_name = "gpsLatitude"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setGpsLatitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->gps_latitude = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double gps_longitude = 17 [json_name = "gpsLongitude"];</code>
     *
     * @return float
     */
    public function getGpsLongitude()
    {
        return isset($this->gps_longitude) ? $this->gps_longitude : 0.0;
    }

    public function hasGpsLongitude()
    {
        return isset($this->gps_longitude);
    }

    public function clearGpsLongitude()
    {
        unset($this->gps_longitude);
    }

    /**
     * Generated from protobuf field <code>optional double gps_longitude = 17 [json_name = "gpsLongitude"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setGpsLongitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->gps_longitude = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double gps_pdop = 18 [json_name = "gpsPdop"];</code>
     *
     * @return float
     */
    public function getGpsPdop()
    {
        return isset($this->gps_pdop) ? $this->gps_pdop : 0.0;
    }

    public function hasGpsPdop()
    {
        return isset($this->gps_pdop);
    }

    public function clearGpsPdop()
    {
        unset($this->gps_pdop);
    }

    /**
     * Generated from protobuf field <code>optional double gps_pdop = 18 [json_name = "gpsPdop"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setGpsPdop($var)
    {
        GPBUtil::checkDouble($var);
        $this->gps_pdop = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 rf_mode = 19 [json_name = "rfMode"];</code>
     *
     * @return int
     */
    public function getRfMode()
    {
        return isset($this->rf_mode) ? $this->rf_mode : 0;
    }

    public function hasRfMode()
    {
        return isset($this->rf_mode);
    }

    public function clearRfMode()
    {
        unset($this->rf_mode);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rf_mode = 19 [json_name = "rfMode"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRfMode($var)
    {
        GPBUtil::checkUint32($var);
        $this->rf_mode = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double phi = 20 [json_name = "phi"];</code>
     *
     * @return float
     */
    public function getPhi()
    {
        return isset($this->phi) ? $this->phi : 0.0;
    }

    public function hasPhi()
    {
        return isset($this->phi);
    }

    public function clearPhi()
    {
        unset($this->phi);
    }

    /**
     * Generated from protobuf field <code>optional double phi = 20 [json_name = "phi"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setPhi($var)
    {
        GPBUtil::checkDouble($var);
        $this->phi = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double theta = 21 [json_name = "theta"];</code>
     *
     * @return float
     */
    public function getTheta()
    {
        return isset($this->theta) ? $this->theta : 0.0;
    }

    public function hasTheta()
    {
        return isset($this->theta);
    }

    public function clearTheta()
    {
        unset($this->theta);
    }

    /**
     * Generated from protobuf field <code>optional double theta = 21 [json_name = "theta"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setTheta($var)
    {
        GPBUtil::checkDouble($var);
        $this->theta = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_channel = 22 [json_name = "rxChannel"];</code>
     *
     * @return int
     */
    public function getRxChannel()
    {
        return isset($this->rx_channel) ? $this->rx_channel : 0;
    }

    public function hasRxChannel()
    {
        return isset($this->rx_channel);
    }

    public function clearRxChannel()
    {
        unset($this->rx_channel);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_channel = 22 [json_name = "rxChannel"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxChannel($var)
    {
        GPBUtil::checkUint32($var);
        $this->rx_channel = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_channel = 23 [json_name = "txChannel"];</code>
     *
     * @return int
     */
    public function getTxChannel()
    {
        return isset($this->tx_channel) ? $this->tx_channel : 0;
    }

    public function hasTxChannel()
    {
        return isset($this->tx_channel);
    }

    public function clearTxChannel()
    {
        unset($this->tx_channel);
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_channel = 23 [json_name = "txChannel"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTxChannel($var)
    {
        GPBUtil::checkUint32($var);
        $this->tx_channel = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float t_dbf_max = 24 [json_name = "tDbfMax"];</code>
     *
     * @return float
     */
    public function getTDbfMax()
    {
        return isset($this->t_dbf_max) ? $this->t_dbf_max : 0.0;
    }

    public function hasTDbfMax()
    {
        return isset($this->t_dbf_max);
    }

    public function clearTDbfMax()
    {
        unset($this->t_dbf_max);
    }

    /**
     * Generated from protobuf field <code>optional float t_dbf_max = 24 [json_name = "tDbfMax"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setTDbfMax($var)
    {
        GPBUtil::checkFloat($var);
        $this->t_dbf_max = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double t_center = 25 [json_name = "tCenter"];</code>
     *
     * @return float
     */
    public function getTCenter()
    {
        return isset($this->t_center) ? $this->t_center : 0.0;
    }

    public function hasTCenter()
    {
        return isset($this->t_center);
    }

    public function clearTCenter()
    {
        unset($this->t_center);
    }

    /**
     * Generated from protobuf field <code>optional double t_center = 25 [json_name = "tCenter"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setTCenter($var)
    {
        GPBUtil::checkDouble($var);
        $this->t_center = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool auto_power_snow_melt_enabled = 30 [json_name = "autoPowerSnowMeltEnabled"];</code>
     *
     * @return bool
     */
    public function getAutoPowerSnowMeltEnabled()
    {
        return isset($this->auto_power_snow_melt_enabled) ? $this->auto_power_snow_melt_enabled : false;
    }

    public function hasAutoPowerSnowMeltEnabled()
    {
        return isset($this->auto_power_snow_melt_enabled);
    }

    public function clearAutoPowerSnowMeltEnabled()
    {
        unset($this->auto_power_snow_melt_enabled);
    }

    /**
     * Generated from protobuf field <code>optional bool auto_power_snow_melt_enabled = 30 [json_name = "autoPowerSnowMeltEnabled"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setAutoPowerSnowMeltEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->auto_power_snow_melt_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double voltage = 32 [json_name = "voltage"];</code>
     *
     * @return float
     */
    public function getVoltage()
    {
        return isset($this->voltage) ? $this->voltage : 0.0;
    }

    public function hasVoltage()
    {
        return isset($this->voltage);
    }

    public function clearVoltage()
    {
        unset($this->voltage);
    }

    /**
     * Generated from protobuf field <code>optional double voltage = 32 [json_name = "voltage"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setVoltage($var)
    {
        GPBUtil::checkDouble($var);
        $this->voltage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_beam_state = 33 [json_name = "rxBeamState"];</code>
     *
     * @return int
     */
    public function getRxBeamState()
    {
        return isset($this->rx_beam_state) ? $this->rx_beam_state : 0;
    }

    public function hasRxBeamState()
    {
        return isset($this->rx_beam_state);
    }

    public function clearRxBeamState()
    {
        unset($this->rx_beam_state);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_beam_state = 33 [json_name = "rxBeamState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxBeamState($var)
    {
        GPBUtil::checkUint32($var);
        $this->rx_beam_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_beam_state = 34 [json_name = "txBeamState"];</code>
     *
     * @return int
     */
    public function getTxBeamState()
    {
        return isset($this->tx_beam_state) ? $this->tx_beam_state : 0;
    }

    public function hasTxBeamState()
    {
        return isset($this->tx_beam_state);
    }

    public function clearTxBeamState()
    {
        unset($this->tx_beam_state);
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_beam_state = 34 [json_name = "txBeamState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTxBeamState($var)
    {
        GPBUtil::checkUint32($var);
        $this->tx_beam_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 half_duplex_state = 35 [json_name = "halfDuplexState"];</code>
     *
     * @return int
     */
    public function getHalfDuplexState()
    {
        return isset($this->half_duplex_state) ? $this->half_duplex_state : 0;
    }

    public function hasHalfDuplexState()
    {
        return isset($this->half_duplex_state);
    }

    public function clearHalfDuplexState()
    {
        unset($this->half_duplex_state);
    }

    /**
     * Generated from protobuf field <code>optional uint32 half_duplex_state = 35 [json_name = "halfDuplexState"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setHalfDuplexState($var)
    {
        GPBUtil::checkUint32($var);
        $this->half_duplex_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool manual_tilt_enabled = 36 [json_name = "manualTiltEnabled"];</code>
     *
     * @return bool
     */
    public function getManualTiltEnabled()
    {
        return isset($this->manual_tilt_enabled) ? $this->manual_tilt_enabled : false;
    }

    public function hasManualTiltEnabled()
    {
        return isset($this->manual_tilt_enabled);
    }

    public function clearManualTiltEnabled()
    {
        unset($this->manual_tilt_enabled);
    }

    /**
     * Generated from protobuf field <code>optional bool manual_tilt_enabled = 36 [json_name = "manualTiltEnabled"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setManualTiltEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->manual_tilt_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double tilt_angle = 37 [json_name = "tiltAngle"];</code>
     *
     * @return float
     */
    public function getTiltAngle()
    {
        return isset($this->tilt_angle) ? $this->tilt_angle : 0.0;
    }

    public function hasTiltAngle()
    {
        return isset($this->tilt_angle);
    }

    public function clearTiltAngle()
    {
        unset($this->tilt_angle);
    }

    /**
     * Generated from protobuf field <code>optional double tilt_angle = 37 [json_name = "tiltAngle"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setTiltAngle($var)
    {
        GPBUtil::checkDouble($var);
        $this->tilt_angle = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 pll_tx_lock_detected = 38 [json_name = "pllTxLockDetected"];</code>
     *
     * @return int
     */
    public function getPllTxLockDetected()
    {
        return isset($this->pll_tx_lock_detected) ? $this->pll_tx_lock_detected : 0;
    }

    public function hasPllTxLockDetected()
    {
        return isset($this->pll_tx_lock_detected);
    }

    public function clearPllTxLockDetected()
    {
        unset($this->pll_tx_lock_detected);
    }

    /**
     * Generated from protobuf field <code>optional uint32 pll_tx_lock_detected = 38 [json_name = "pllTxLockDetected"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setPllTxLockDetected($var)
    {
        GPBUtil::checkUint32($var);
        $this->pll_tx_lock_detected = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool eirp_exceeded_threshold = 39 [json_name = "eirpExceededThreshold"];</code>
     *
     * @return bool
     */
    public function getEirpExceededThreshold()
    {
        return isset($this->eirp_exceeded_threshold) ? $this->eirp_exceeded_threshold : false;
    }

    public function hasEirpExceededThreshold()
    {
        return isset($this->eirp_exceeded_threshold);
    }

    public function clearEirpExceededThreshold()
    {
        unset($this->eirp_exceeded_threshold);
    }

    /**
     * Generated from protobuf field <code>optional bool eirp_exceeded_threshold = 39 [json_name = "eirpExceededThreshold"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setEirpExceededThreshold($var)
    {
        GPBUtil::checkBool($var);
        $this->eirp_exceeded_threshold = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool idle_override_enabled = 41 [json_name = "idleOverrideEnabled"];</code>
     *
     * @return bool
     */
    public function getIdleOverrideEnabled()
    {
        return isset($this->idle_override_enabled) ? $this->idle_override_enabled : false;
    }

    public function hasIdleOverrideEnabled()
    {
        return isset($this->idle_override_enabled);
    }

    public function clearIdleOverrideEnabled()
    {
        unset($this->idle_override_enabled);
    }

    /**
     * Generated from protobuf field <code>optional bool idle_override_enabled = 41 [json_name = "idleOverrideEnabled"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setIdleOverrideEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->idle_override_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool theta_override_enabled = 42 [json_name = "thetaOverrideEnabled"];</code>
     *
     * @return bool
     */
    public function getThetaOverrideEnabled()
    {
        return isset($this->theta_override_enabled) ? $this->theta_override_enabled : false;
    }

    public function hasThetaOverrideEnabled()
    {
        return isset($this->theta_override_enabled);
    }

    public function clearThetaOverrideEnabled()
    {
        unset($this->theta_override_enabled);
    }

    /**
     * Generated from protobuf field <code>optional bool theta_override_enabled = 42 [json_name = "thetaOverrideEnabled"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setThetaOverrideEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->theta_override_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double theta_override_value = 43 [json_name = "thetaOverrideValue"];</code>
     *
     * @return float
     */
    public function getThetaOverrideValue()
    {
        return isset($this->theta_override_value) ? $this->theta_override_value : 0.0;
    }

    public function hasThetaOverrideValue()
    {
        return isset($this->theta_override_value);
    }

    public function clearThetaOverrideValue()
    {
        unset($this->theta_override_value);
    }

    /**
     * Generated from protobuf field <code>optional double theta_override_value = 43 [json_name = "thetaOverrideValue"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setThetaOverrideValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->theta_override_value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool phi_override_enabled = 44 [json_name = "phiOverrideEnabled"];</code>
     *
     * @return bool
     */
    public function getPhiOverrideEnabled()
    {
        return isset($this->phi_override_enabled) ? $this->phi_override_enabled : false;
    }

    public function hasPhiOverrideEnabled()
    {
        return isset($this->phi_override_enabled);
    }

    public function clearPhiOverrideEnabled()
    {
        unset($this->phi_override_enabled);
    }

    /**
     * Generated from protobuf field <code>optional bool phi_override_enabled = 44 [json_name = "phiOverrideEnabled"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setPhiOverrideEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->phi_override_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double phi_override_value = 45 [json_name = "phiOverrideValue"];</code>
     *
     * @return float
     */
    public function getPhiOverrideValue()
    {
        return isset($this->phi_override_value) ? $this->phi_override_value : 0.0;
    }

    public function hasPhiOverrideValue()
    {
        return isset($this->phi_override_value);
    }

    public function clearPhiOverrideValue()
    {
        unset($this->phi_override_value);
    }

    /**
     * Generated from protobuf field <code>optional double phi_override_value = 45 [json_name = "phiOverrideValue"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setPhiOverrideValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->phi_override_value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_chan_override_value = 46 [json_name = "rxChanOverrideValue"];</code>
     *
     * @return int
     */
    public function getRxChanOverrideValue()
    {
        return isset($this->rx_chan_override_value) ? $this->rx_chan_override_value : 0;
    }

    public function hasRxChanOverrideValue()
    {
        return isset($this->rx_chan_override_value);
    }

    public function clearRxChanOverrideValue()
    {
        unset($this->rx_chan_override_value);
    }

    /**
     * Generated from protobuf field <code>optional uint32 rx_chan_override_value = 46 [json_name = "rxChanOverrideValue"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxChanOverrideValue($var)
    {
        GPBUtil::checkUint32($var);
        $this->rx_chan_override_value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_chan_override_value = 47 [json_name = "txChanOverrideValue"];</code>
     *
     * @return int
     */
    public function getTxChanOverrideValue()
    {
        return isset($this->tx_chan_override_value) ? $this->tx_chan_override_value : 0;
    }

    public function hasTxChanOverrideValue()
    {
        return isset($this->tx_chan_override_value);
    }

    public function clearTxChanOverrideValue()
    {
        unset($this->tx_chan_override_value);
    }

    /**
     * Generated from protobuf field <code>optional uint32 tx_chan_override_value = 47 [json_name = "txChanOverrideValue"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTxChanOverrideValue($var)
    {
        GPBUtil::checkUint32($var);
        $this->tx_chan_override_value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool sky_search_override_enabled = 48 [json_name = "skySearchOverrideEnabled"];</code>
     *
     * @return bool
     */
    public function getSkySearchOverrideEnabled()
    {
        return isset($this->sky_search_override_enabled) ? $this->sky_search_override_enabled : false;
    }

    public function hasSkySearchOverrideEnabled()
    {
        return isset($this->sky_search_override_enabled);
    }

    public function clearSkySearchOverrideEnabled()
    {
        unset($this->sky_search_override_enabled);
    }

    /**
     * Generated from protobuf field <code>optional bool sky_search_override_enabled = 48 [json_name = "skySearchOverrideEnabled"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setSkySearchOverrideEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->sky_search_override_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool fast_switching_enabled = 49 [json_name = "fastSwitchingEnabled"];</code>
     *
     * @return bool
     */
    public function getFastSwitchingEnabled()
    {
        return isset($this->fast_switching_enabled) ? $this->fast_switching_enabled : false;
    }

    public function hasFastSwitchingEnabled()
    {
        return isset($this->fast_switching_enabled);
    }

    public function clearFastSwitchingEnabled()
    {
        unset($this->fast_switching_enabled);
    }

    /**
     * Generated from protobuf field <code>optional bool fast_switching_enabled = 49 [json_name = "fastSwitchingEnabled"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setFastSwitchingEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->fast_switching_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 modulation_override_value = 50 [json_name = "modulationOverrideValue"];</code>
     *
     * @return int
     */
    public function getModulationOverrideValue()
    {
        return isset($this->modulation_override_value) ? $this->modulation_override_value : 0;
    }

    public function hasModulationOverrideValue()
    {
        return isset($this->modulation_override_value);
    }

    public function clearModulationOverrideValue()
    {
        unset($this->modulation_override_value);
    }

    /**
     * Generated from protobuf field <code>optional uint32 modulation_override_value = 50 [json_name = "modulationOverrideValue"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setModulationOverrideValue($var)
    {
        GPBUtil::checkUint32($var);
        $this->modulation_override_value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool force_eirp_failure = 51 [json_name = "forceEirpFailure"];</code>
     *
     * @return bool
     */
    public function getForceEirpFailure()
    {
        return isset($this->force_eirp_failure) ? $this->force_eirp_failure : false;
    }

    public function hasForceEirpFailure()
    {
        return isset($this->force_eirp_failure);
    }

    public function clearForceEirpFailure()
    {
        unset($this->force_eirp_failure);
    }

    /**
     * Generated from protobuf field <code>optional bool force_eirp_failure = 51 [json_name = "forceEirpFailure"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setForceEirpFailure($var)
    {
        GPBUtil::checkBool($var);
        $this->force_eirp_failure = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool force_pll_unlock = 52 [json_name = "forcePllUnlock"];</code>
     *
     * @return bool
     */
    public function getForcePllUnlock()
    {
        return isset($this->force_pll_unlock) ? $this->force_pll_unlock : false;
    }

    public function hasForcePllUnlock()
    {
        return isset($this->force_pll_unlock);
    }

    public function clearForcePllUnlock()
    {
        unset($this->force_pll_unlock);
    }

    /**
     * Generated from protobuf field <code>optional bool force_pll_unlock = 52 [json_name = "forcePllUnlock"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setForcePllUnlock($var)
    {
        GPBUtil::checkBool($var);
        $this->force_pll_unlock = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 ut_ine_success = 53 [json_name = "utIneSuccess"];</code>
     *
     * @return int
     */
    public function getUtIneSuccess()
    {
        return isset($this->ut_ine_success) ? $this->ut_ine_success : 0;
    }

    public function hasUtIneSuccess()
    {
        return isset($this->ut_ine_success);
    }

    public function clearUtIneSuccess()
    {
        unset($this->ut_ine_success);
    }

    /**
     * Generated from protobuf field <code>optional uint32 ut_ine_success = 53 [json_name = "utIneSuccess"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setUtIneSuccess($var)
    {
        GPBUtil::checkUint32($var);
        $this->ut_ine_success = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool rf_ready = 54 [json_name = "rfReady"];</code>
     *
     * @return bool
     */
    public function getRfReady()
    {
        return isset($this->rf_ready) ? $this->rf_ready : false;
    }

    public function hasRfReady()
    {
        return isset($this->rf_ready);
    }

    public function clearRfReady()
    {
        unset($this->rf_ready);
    }

    /**
     * Generated from protobuf field <code>optional bool rf_ready = 54 [json_name = "rfReady"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setRfReady($var)
    {
        GPBUtil::checkBool($var);
        $this->rf_ready = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool tilt_to_stowed = 55 [json_name = "tiltToStowed"];</code>
     *
     * @return bool
     */
    public function getTiltToStowed()
    {
        return isset($this->tilt_to_stowed) ? $this->tilt_to_stowed : false;
    }

    public function hasTiltToStowed()
    {
        return isset($this->tilt_to_stowed);
    }

    public function clearTiltToStowed()
    {
        unset($this->tilt_to_stowed);
    }

    /**
     * Generated from protobuf field <code>optional bool tilt_to_stowed = 55 [json_name = "tiltToStowed"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setTiltToStowed($var)
    {
        GPBUtil::checkBool($var);
        $this->tilt_to_stowed = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool reboot = 56 [json_name = "reboot"];</code>
     *
     * @return bool
     */
    public function getReboot()
    {
        return isset($this->reboot) ? $this->reboot : false;
    }

    public function hasReboot()
    {
        return isset($this->reboot);
    }

    public function clearReboot()
    {
        unset($this->reboot);
    }

    /**
     * Generated from protobuf field <code>optional bool reboot = 56 [json_name = "reboot"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setReboot($var)
    {
        GPBUtil::checkBool($var);
        $this->reboot = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool continuous_motor_test = 57 [json_name = "continuousMotorTest"];</code>
     *
     * @return bool
     */
    public function getContinuousMotorTest()
    {
        return isset($this->continuous_motor_test) ? $this->continuous_motor_test : false;
    }

    public function hasContinuousMotorTest()
    {
        return isset($this->continuous_motor_test);
    }

    public function clearContinuousMotorTest()
    {
        unset($this->continuous_motor_test);
    }

    /**
     * Generated from protobuf field <code>optional bool continuous_motor_test = 57 [json_name = "continuousMotorTest"];</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setContinuousMotorTest($var)
    {
        GPBUtil::checkBool($var);
        $this->continuous_motor_test = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double distance_override_meters = 58 [json_name = "distanceOverrideMeters"];</code>
     *
     * @return float
     */
    public function getDistanceOverrideMeters()
    {
        return isset($this->distance_override_meters) ? $this->distance_override_meters : 0.0;
    }

    public function hasDistanceOverrideMeters()
    {
        return isset($this->distance_override_meters);
    }

    public function clearDistanceOverrideMeters()
    {
        unset($this->distance_override_meters);
    }

    /**
     * Generated from protobuf field <code>optional double distance_override_meters = 58 [json_name = "distanceOverrideMeters"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setDistanceOverrideMeters($var)
    {
        GPBUtil::checkDouble($var);
        $this->distance_override_meters = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 country_code_override = 62 [json_name = "countryCodeOverride"];</code>
     *
     * @return int
     */
    public function getCountryCodeOverride()
    {
        return isset($this->country_code_override) ? $this->country_code_override : 0;
    }

    public function hasCountryCodeOverride()
    {
        return isset($this->country_code_override);
    }

    public function clearCountryCodeOverride()
    {
        unset($this->country_code_override);
    }

    /**
     * Generated from protobuf field <code>optional uint32 country_code_override = 62 [json_name = "countryCodeOverride"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setCountryCodeOverride($var)
    {
        GPBUtil::checkUint32($var);
        $this->country_code_override = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double max_pointing_distance = 63 [json_name = "maxPointingDistance"];</code>
     *
     * @return float
     */
    public function getMaxPointingDistance()
    {
        return isset($this->max_pointing_distance) ? $this->max_pointing_distance : 0.0;
    }

    public function hasMaxPointingDistance()
    {
        return isset($this->max_pointing_distance);
    }

    public function clearMaxPointingDistance()
    {
        unset($this->max_pointing_distance);
    }

    /**
     * Generated from protobuf field <code>optional double max_pointing_distance = 63 [json_name = "maxPointingDistance"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setMaxPointingDistance($var)
    {
        GPBUtil::checkDouble($var);
        $this->max_pointing_distance = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double distance_scaling_factor = 64 [json_name = "distanceScalingFactor"];</code>
     *
     * @return float
     */
    public function getDistanceScalingFactor()
    {
        return isset($this->distance_scaling_factor) ? $this->distance_scaling_factor : 0.0;
    }

    public function hasDistanceScalingFactor()
    {
        return isset($this->distance_scaling_factor);
    }

    public function clearDistanceScalingFactor()
    {
        unset($this->distance_scaling_factor);
    }

    /**
     * Generated from protobuf field <code>optional double distance_scaling_factor = 64 [json_name = "distanceScalingFactor"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setDistanceScalingFactor($var)
    {
        GPBUtil::checkDouble($var);
        $this->distance_scaling_factor = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 tx_duty_cycle_override = 65 [json_name = "txDutyCycleOverride"];</code>
     *
     * @return int
     */
    public function getTxDutyCycleOverride()
    {
        return isset($this->tx_duty_cycle_override) ? $this->tx_duty_cycle_override : 0;
    }

    public function hasTxDutyCycleOverride()
    {
        return isset($this->tx_duty_cycle_override);
    }

    public function clearTxDutyCycleOverride()
    {
        unset($this->tx_duty_cycle_override);
    }

    /**
     * Generated from protobuf field <code>optional int32 tx_duty_cycle_override = 65 [json_name = "txDutyCycleOverride"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setTxDutyCycleOverride($var)
    {
        GPBUtil::checkInt32($var);
        $this->tx_duty_cycle_override = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 rx_duty_cycle_override = 66 [json_name = "rxDutyCycleOverride"];</code>
     *
     * @return int
     */
    public function getRxDutyCycleOverride()
    {
        return isset($this->rx_duty_cycle_override) ? $this->rx_duty_cycle_override : 0;
    }

    public function hasRxDutyCycleOverride()
    {
        return isset($this->rx_duty_cycle_override);
    }

    public function clearRxDutyCycleOverride()
    {
        unset($this->rx_duty_cycle_override);
    }

    /**
     * Generated from protobuf field <code>optional int32 rx_duty_cycle_override = 66 [json_name = "rxDutyCycleOverride"];</code>
     *
     * @param  int  $var
     * @return $this
     */
    public function setRxDutyCycleOverride($var)
    {
        GPBUtil::checkInt32($var);
        $this->rx_duty_cycle_override = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float tx_time_ms = 67 [json_name = "txTimeMs"];</code>
     *
     * @return float
     */
    public function getTxTimeMs()
    {
        return isset($this->tx_time_ms) ? $this->tx_time_ms : 0.0;
    }

    public function hasTxTimeMs()
    {
        return isset($this->tx_time_ms);
    }

    public function clearTxTimeMs()
    {
        unset($this->tx_time_ms);
    }

    /**
     * Generated from protobuf field <code>optional float tx_time_ms = 67 [json_name = "txTimeMs"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setTxTimeMs($var)
    {
        GPBUtil::checkFloat($var);
        $this->tx_time_ms = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float rx_time_ms = 68 [json_name = "rxTimeMs"];</code>
     *
     * @return float
     */
    public function getRxTimeMs()
    {
        return isset($this->rx_time_ms) ? $this->rx_time_ms : 0.0;
    }

    public function hasRxTimeMs()
    {
        return isset($this->rx_time_ms);
    }

    public function clearRxTimeMs()
    {
        unset($this->rx_time_ms);
    }

    /**
     * Generated from protobuf field <code>optional float rx_time_ms = 68 [json_name = "rxTimeMs"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setRxTimeMs($var)
    {
        GPBUtil::checkFloat($var);
        $this->rx_time_ms = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double eirp_legal_limit_dbw = 69 [json_name = "eirpLegalLimitDbw"];</code>
     *
     * @return float
     */
    public function getEirpLegalLimitDbw()
    {
        return isset($this->eirp_legal_limit_dbw) ? $this->eirp_legal_limit_dbw : 0.0;
    }

    public function hasEirpLegalLimitDbw()
    {
        return isset($this->eirp_legal_limit_dbw);
    }

    public function clearEirpLegalLimitDbw()
    {
        unset($this->eirp_legal_limit_dbw);
    }

    /**
     * Generated from protobuf field <code>optional double eirp_legal_limit_dbw = 69 [json_name = "eirpLegalLimitDbw"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setEirpLegalLimitDbw($var)
    {
        GPBUtil::checkDouble($var);
        $this->eirp_legal_limit_dbw = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double eirp_legal_limit_dbw_override = 70 [json_name = "eirpLegalLimitDbwOverride"];</code>
     *
     * @return float
     */
    public function getEirpLegalLimitDbwOverride()
    {
        return isset($this->eirp_legal_limit_dbw_override) ? $this->eirp_legal_limit_dbw_override : 0.0;
    }

    public function hasEirpLegalLimitDbwOverride()
    {
        return isset($this->eirp_legal_limit_dbw_override);
    }

    public function clearEirpLegalLimitDbwOverride()
    {
        unset($this->eirp_legal_limit_dbw_override);
    }

    /**
     * Generated from protobuf field <code>optional double eirp_legal_limit_dbw_override = 70 [json_name = "eirpLegalLimitDbwOverride"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setEirpLegalLimitDbwOverride($var)
    {
        GPBUtil::checkDouble($var);
        $this->eirp_legal_limit_dbw_override = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double eirp_adjustment_db = 71 [json_name = "eirpAdjustmentDb"];</code>
     *
     * @return float
     */
    public function getEirpAdjustmentDb()
    {
        return isset($this->eirp_adjustment_db) ? $this->eirp_adjustment_db : 0.0;
    }

    public function hasEirpAdjustmentDb()
    {
        return isset($this->eirp_adjustment_db);
    }

    public function clearEirpAdjustmentDb()
    {
        unset($this->eirp_adjustment_db);
    }

    /**
     * Generated from protobuf field <code>optional double eirp_adjustment_db = 71 [json_name = "eirpAdjustmentDb"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setEirpAdjustmentDb($var)
    {
        GPBUtil::checkDouble($var);
        $this->eirp_adjustment_db = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double eirp_predicted_dbw = 72 [json_name = "eirpPredictedDbw"];</code>
     *
     * @return float
     */
    public function getEirpPredictedDbw()
    {
        return isset($this->eirp_predicted_dbw) ? $this->eirp_predicted_dbw : 0.0;
    }

    public function hasEirpPredictedDbw()
    {
        return isset($this->eirp_predicted_dbw);
    }

    public function clearEirpPredictedDbw()
    {
        unset($this->eirp_predicted_dbw);
    }

    /**
     * Generated from protobuf field <code>optional double eirp_predicted_dbw = 72 [json_name = "eirpPredictedDbw"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setEirpPredictedDbw($var)
    {
        GPBUtil::checkDouble($var);
        $this->eirp_predicted_dbw = $var;

        return $this;
    }
}
