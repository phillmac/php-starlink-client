<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/services/unlock/service.proto

namespace SpaceX\API\Device\Services\Unlock;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.Services.Unlock.StartUnlockResponse</code>
 */
class StartUnlockResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string device_id = 1 [json_name = "deviceId"];</code>
     */
    protected $device_id = null;

    /**
     * Generated from protobuf field <code>optional bytes nonce = 2 [json_name = "nonce"];</code>
     */
    protected $nonce = null;

    /**
     * Generated from protobuf field <code>optional bytes sign_spki = 3 [json_name = "signSpki"];</code>
     */
    protected $sign_spki = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type string $device_id
     * @type string $nonce
     * @type string $sign_spki
     *              }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Services\Unlock\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string device_id = 1 [json_name = "deviceId"];</code>
     *
     * @return string
     */
    public function getDeviceId()
    {
        return isset($this->device_id) ? $this->device_id : '';
    }

    public function hasDeviceId()
    {
        return isset($this->device_id);
    }

    public function clearDeviceId()
    {
        unset($this->device_id);
    }

    /**
     * Generated from protobuf field <code>optional string device_id = 1 [json_name = "deviceId"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkString($var, true);
        $this->device_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bytes nonce = 2 [json_name = "nonce"];</code>
     *
     * @return string
     */
    public function getNonce()
    {
        return isset($this->nonce) ? $this->nonce : '';
    }

    public function hasNonce()
    {
        return isset($this->nonce);
    }

    public function clearNonce()
    {
        unset($this->nonce);
    }

    /**
     * Generated from protobuf field <code>optional bytes nonce = 2 [json_name = "nonce"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkString($var, false);
        $this->nonce = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bytes sign_spki = 3 [json_name = "signSpki"];</code>
     *
     * @return string
     */
    public function getSignSpki()
    {
        return isset($this->sign_spki) ? $this->sign_spki : '';
    }

    public function hasSignSpki()
    {
        return isset($this->sign_spki);
    }

    public function clearSignSpki()
    {
        unset($this->sign_spki);
    }

    /**
     * Generated from protobuf field <code>optional bytes sign_spki = 3 [json_name = "signSpki"];</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setSignSpki($var)
    {
        GPBUtil::checkString($var, false);
        $this->sign_spki = $var;

        return $this;
    }
}
