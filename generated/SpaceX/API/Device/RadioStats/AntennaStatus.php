<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex_api/device/wifi.proto

namespace SpaceX\API\Device\RadioStats;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SpaceX.API.Device.RadioStats.AntennaStatus</code>
 */
class AntennaStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional float rssi1 = 1 [json_name = "rssi1"];</code>
     */
    protected $rssi1 = null;

    /**
     * Generated from protobuf field <code>optional float rssi2 = 2 [json_name = "rssi2"];</code>
     */
    protected $rssi2 = null;

    /**
     * Generated from protobuf field <code>optional float rssi3 = 3 [json_name = "rssi3"];</code>
     */
    protected $rssi3 = null;

    /**
     * Generated from protobuf field <code>optional float rssi4 = 4 [json_name = "rssi4"];</code>
     */
    protected $rssi4 = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type float $rssi1
     * @type float $rssi2
     * @type float $rssi3
     * @type float $rssi4
     *             }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\SpacexApi\Device\Wifi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional float rssi1 = 1 [json_name = "rssi1"];</code>
     *
     * @return float
     */
    public function getRssi1()
    {
        return isset($this->rssi1) ? $this->rssi1 : 0.0;
    }

    public function hasRssi1()
    {
        return isset($this->rssi1);
    }

    public function clearRssi1()
    {
        unset($this->rssi1);
    }

    /**
     * Generated from protobuf field <code>optional float rssi1 = 1 [json_name = "rssi1"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setRssi1($var)
    {
        GPBUtil::checkFloat($var);
        $this->rssi1 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float rssi2 = 2 [json_name = "rssi2"];</code>
     *
     * @return float
     */
    public function getRssi2()
    {
        return isset($this->rssi2) ? $this->rssi2 : 0.0;
    }

    public function hasRssi2()
    {
        return isset($this->rssi2);
    }

    public function clearRssi2()
    {
        unset($this->rssi2);
    }

    /**
     * Generated from protobuf field <code>optional float rssi2 = 2 [json_name = "rssi2"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setRssi2($var)
    {
        GPBUtil::checkFloat($var);
        $this->rssi2 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float rssi3 = 3 [json_name = "rssi3"];</code>
     *
     * @return float
     */
    public function getRssi3()
    {
        return isset($this->rssi3) ? $this->rssi3 : 0.0;
    }

    public function hasRssi3()
    {
        return isset($this->rssi3);
    }

    public function clearRssi3()
    {
        unset($this->rssi3);
    }

    /**
     * Generated from protobuf field <code>optional float rssi3 = 3 [json_name = "rssi3"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setRssi3($var)
    {
        GPBUtil::checkFloat($var);
        $this->rssi3 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional float rssi4 = 4 [json_name = "rssi4"];</code>
     *
     * @return float
     */
    public function getRssi4()
    {
        return isset($this->rssi4) ? $this->rssi4 : 0.0;
    }

    public function hasRssi4()
    {
        return isset($this->rssi4);
    }

    public function clearRssi4()
    {
        unset($this->rssi4);
    }

    /**
     * Generated from protobuf field <code>optional float rssi4 = 4 [json_name = "rssi4"];</code>
     *
     * @param  float  $var
     * @return $this
     */
    public function setRssi4($var)
    {
        GPBUtil::checkFloat($var);
        $this->rssi4 = $var;

        return $this;
    }
}
